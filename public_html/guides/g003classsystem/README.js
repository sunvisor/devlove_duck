Ext.data.JsonP.g003classsystem({"guide":"<h1 id='g003classsystem-section-%E3%82%AF%E3%83%A9%E3%82%B9%E3%82%B7%E3%82%B9%E3%83%86%E3%83%A0%E3%81%AB%E3%81%A4%E3%81%84%E3%81%A6'>クラスシステムについて</h1>\n\n<ul>\n<li>本来はクラスという概念がないJavaScriptですが、Senchaのフレームワークでは、\nJavaScript上に独自のクラスシステムを構築しています。</li>\n<li><p>クラス定義は、<code>Ext.define</code>を使います。</p>\n\n<pre><code>  Ext.define('ContactList.view.Main', {\n      extend: 'Ext.tab.Panel',\n      xtype: 'main',\n      requires: [\n          'Ext.TitleBar',\n          'Ext.Video'\n      ],\n      config: {\n          tabBarPosition: 'bottom',\n          :\n          :\n  });\n</code></pre></li>\n<li><p>インスタンスの生成はExt.createを使います。</p>\n\n<pre><code>  Ext.create('ContactList.view.Main', {\n      :\n      :\n  });\n</code></pre></li>\n<li><p>ただしMVCの構造に沿って開発していると、主なクラスはフレームワークがインスタンス化してくれます。</p></li>\n</ul>\n\n","title":"クラスシステムについて"});