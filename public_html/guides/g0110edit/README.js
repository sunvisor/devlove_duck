Ext.data.JsonP.g0110edit({"guide":"<h1 id='g0110edit-section-%E3%83%87%E3%83%BC%E3%82%BF%E3%81%AE%E7%B7%A8%E9%9B%86'>データの編集</h1>\n\n<p>作ったフォームを使ってデータの編集をしてみましょう。</p>\n\n<ul>\n<li>編集ボタン、保存ボタンをNavigationViewのツールバーに追加します。</li>\n<li>追加ボタン、編集ボタン、保存ボタンが状況に応じて表示されるようにコントロールします。</li>\n<li>Detailビューが表示されている時に、「編集」ボタンをタップするとデータを編集できるようにします。</li>\n<li>Editビューで保存ボタンをタップするとデータがStoreに保存されるようにします。</li>\n</ul>\n\n\n<h2 id='g0110edit-section-%E3%82%84%E3%81%A3%E3%81%A6%E3%81%BF%E3%82%88%E3%81%86-%2311'>やってみよう #11</h2>\n\n<blockquote><p>※ 直前のハンズオンがうまくいかなかった方のために、ここまでの結果を用意しています。\n<a href=\"http://sencha.sunvisor.net/devlove/cl10.zip\">こちらからダウンロードして</a>\nドキュメントルートのdevloveディレクトリの下に解凍してください。</p></blockquote>\n\n<h3 id='g0110edit-section-%E6%89%8B%E9%A0%86'>手順</h3>\n\n<ul>\n<li>編集／保存用のボタンをNaviビューに追加します。</li>\n</ul>\n\n\n<h3 id='g0110edit-section-%E7%B7%A8%E9%9B%86%E7%94%A8%E3%83%9C%E3%82%BF%E3%83%B3%E3%81%AE%E8%BF%BD%E5%8A%A0'>編集用ボタンの追加</h3>\n\n<ul>\n<li><p>次の二つのオブジェクトを <code>navigationBar</code> の <code>items</code> に追加します。</p>\n\n<pre><code>  {\n      xtype: 'button',\n      text: '編集',\n      itemId: 'editButton',\n      hidden: true,\n      align: 'right'\n  }\n  {\n      xtype: 'button',\n      text: '保存',\n      itemId: 'saveButton',\n      hidden: true,\n      align: 'right'\n  }\n</code></pre></li>\n<li><p>この二つのボタンは初期状態で「非表示」にしています。</p></li>\n</ul>\n\n\n<h3 id='g0110edit-section-%E3%83%9C%E3%82%BF%E3%83%B3%E8%A1%A8%E7%A4%BA%E3%81%AE%E3%82%B3%E3%83%B3%E3%83%88%E3%83%AD%E3%83%BC%E3%83%AB'>ボタン表示のコントロール</h3>\n\n<ul>\n<li><p>Listビューが表示されたとき</p>\n\n<ul>\n<li>追加ボタンを表示</li>\n</ul>\n</li>\n<li><p>Detailビューが表示されたとき</p>\n\n<ul>\n<li>編集ボタンを表示</li>\n</ul>\n</li>\n<li><p>Editビューが表示されたとき</p>\n\n<ul>\n<li>保存ボタンを表示</li>\n</ul>\n</li>\n<li><p>それぞれのビューの <code>show</code> / <code>hide</code> イベントにリスナーをセットしてコントロールします。</p></li>\n</ul>\n\n\n<h4 id='g0110edit-section-app%2Fcontroller%2Flist.js'>app/controller/List.js</h4>\n\n<ul>\n<li><p><code>refs</code> にボタンを取得する定義をセット</p>\n\n<pre><code>  addButton: 'button#addButton'\n</code></pre></li>\n<li><p><code>show</code> / <code>hide</code> イベントリスナーをセット</p>\n\n<pre><code>  control: {\n      contactlist: {\n          disclose: 'onDisclose',\n          show: 'onShow',  // 追加\n          hide: 'onHide'   // 追加\n      }\n  }\n</code></pre></li>\n<li><p>リスナーを書く</p>\n\n<pre><code>  onShow: function() {\n      this.getAddButton().show();\n  },\n\n  onHide: function () {\n      this.getAddButton().hide();\n  }\n</code></pre></li>\n</ul>\n\n\n<h4 id='g0110edit-section-app%2Fcontroller%2Fdetail.js'>app/controller/Detail.js</h4>\n\n<ul>\n<li><p>コントローラーの作成</p>\n\n<pre><code>  sencha generate controller Detail\n</code></pre></li>\n<li><p><code>refs</code> の定義</p>\n\n<pre><code>  detail: 'contactdetail',\n  editButton: 'button#editButton'\n</code></pre></li>\n<li><p><code>control</code>の定義</p>\n\n<pre><code>  detail : {\n      show: 'onShow',\n      hide: 'onHide'\n  }\n</code></pre></li>\n<li><p>リスナーを書く</p>\n\n<pre><code>  onShow: function() {\n      me.getEditButton().show();\n  },\n\n  onHide: function () {\n      this.getEditButton().hide();\n  }\n</code></pre></li>\n</ul>\n\n\n<h4 id='g0110edit-section-app%2Fcontroller%2Fedit.js'>app/controller/Edit.js</h4>\n\n<ul>\n<li><p>コントローラーの作成</p>\n\n<pre><code>  sencha generate controller Edit\n</code></pre></li>\n<li><p><code>refs</code> の定義</p>\n\n<pre><code>  edit: 'contactedit',\n  saveButton: 'button#saveButton'\n</code></pre></li>\n<li><p><code>control</code> の定義</p>\n\n<pre><code>  edit : {\n      show: 'onShow',\n      hide: 'onHide'\n  }\n</code></pre></li>\n<li><p>リスナーを書く</p>\n\n<pre><code>  onShow: function() {\n      this.getSaveButton().show();\n  },\n\n  onHide: function () {\n      this.getSaveButton().hide();\n  }\n</code></pre></li>\n</ul>\n\n\n<h3 id='g0110edit-section-%E7%B7%A8%E9%9B%86%E3%81%AE%E5%AE%9F%E7%8F%BE'>編集の実現</h3>\n\n<p>Detailビューが表示されている時に、「編集」ボタンをタップするとデータを編集できるようにします。\n「編集」ボタンはNaviビューにあるので、Naviコントローラーにリスナーを設定する事にします。</p>\n\n<ul>\n<li><p><code>refs</code> に追加</p>\n\n<pre><code>  editButton: 'button#editButton'\n</code></pre></li>\n<li><p><code>control</code> に追加</p>\n\n<pre><code>  editButton: {\n      tap: 'onTapEditButton'\n  }\n</code></pre></li>\n<li><p>リスナーを追加します。Editビューを表示するとともに、フォームにデータを設定します。</p>\n\n<pre><code>  onTapEditButton: function() {\n      var me = this,\n          record = me.getDetail().getRecord(),\n          edit = Ext.create('ContactList.view.Edit');\n\n      edit.setRecord(record);\n      me.getNavi().push(edit);\n  }\n</code></pre></li>\n<li><p>レコードは、Detailビューの <code>getRecord()</code> メソッドで取得しています。</p></li>\n<li>そのデータを生成したEditビューの <code>setRecord()</code> メソッドで設定しています。</li>\n<li><p>これだけで、フォームにデータをロードすることができます。</p></li>\n<li><p>このリスナーで生成しているビューを <code>requires</code> に追加</p>\n\n<pre><code>  requires: [\n      'ContactList.view.Edit'\n  ]\n</code></pre></li>\n<li><p>実行してみましょう。Detailビューが表示されているときに、編集ボタンをタップすると、フォームにそのデータが表示されます。</p></li>\n</ul>\n\n\n<h3 id='g0110edit-section-%E4%BF%9D%E5%AD%98%E5%87%A6%E7%90%86'>保存処理</h3>\n\n<p>保存処理は、Editコントローラーに書いていきます。</p>\n\n<ul>\n<li><p><code>refs</code> に追加</p>\n\n<pre><code>  navi: 'contactnavi',\n</code></pre></li>\n<li><p><code>control</code> に追加</p>\n\n<pre><code>  saveButton: {\n      tap: 'onSaveData'\n  }\n</code></pre></li>\n<li><p>リスナーを追加</p>\n\n<pre><code>  onTapSaveButton: function() {\n      var me = this,\n          edit = me.getEdit(),\n          record = edit.getRecord(),\n          data = edit.getValues(),\n          store = Ext.getStore('Contacts');\n\n      record.set(data);\n      me.getNavi().pop();\n  }\n</code></pre></li>\n<li><p>実行して、フォームの保存ボタンをタップして、実際にデータが一覧に保存されていることを確認します。</p></li>\n<li>ここでは、ローカルのStoreに保存されただけで、サーバー上のデータは変更されていません。</li>\n</ul>\n\n\n<h3 id='g0110edit-section-%E3%83%87%E3%83%BC%E3%82%BF%E3%81%AE%E8%BF%BD%E5%8A%A0'>データの追加</h3>\n\n<p>データの追加も実装しましょう。</p>\n\n<ul>\n<li>Listビューが表示されているときに、「新規」ボタンをタップするとデータを追加できるようにします。</li>\n<li>追加ボタンでEditビューが追加されますが、保存ボタンをタップしたときに新規追加されるようにします。</li>\n</ul>\n\n\n<h4 id='g0110edit-section-%E3%83%AA%E3%82%B9%E3%83%8A%E3%83%BC%E3%82%92%E5%A4%89%E6%9B%B4'>リスナーを変更</h4>\n\n<p>やってみよう#10 で作った <code>onTapAddButton</code> リスナーを変更します。</p>\n\n<pre><code>onTapAddButton: function() {\n    var me = this,\n        record = Ext.create('ContactList.model.Contact'),   // 追加 *1\n        form = Ext.create('ContactList.view.Edit');\n\n    form.setRecord(record);         // 追加 *2\n    me.getNavi().push(form);\n},\n</code></pre>\n\n<ul>\n<li>新しいModelのインスタンスを生成(*1)して</li>\n<li>Formにセットしています(*2)</li>\n</ul>\n\n\n<h4 id='g0110edit-section-%E4%BF%9D%E5%AD%98%E5%87%A6%E7%90%86%E3%81%AE%E5%A4%89%E6%9B%B4%EF%BC%88%E6%9B%B4%E6%96%B0%E6%99%82%E3%81%A8%E8%BF%BD%E5%8A%A0%E6%99%82%EF%BC%89'>保存処理の変更（更新時と追加時）</h4>\n\n<ul>\n<li><p><code>onTapSaveButton</code>リスナーの<code>record.set(data);</code>の直後に次のコードを追加します。</p>\n\n<pre><code>  if( record.phantom ) {\n      store.add(record);\n  }\n</code></pre></li>\n<li><p>これはModelが新しいものだったら、Storeに追加するという処理です。</p></li>\n<li>モデルの <code>phantom</code> というプロパティを見ると、そのモデルが新規か訂正かを判断できます。</li>\n<li>新規の場合にはストアの <code>add</code> メソッドで追加しています。</li>\n</ul>\n\n","title":"データの編集"});